(OP #)
(ID include)
(RELOP <)
(ID stdio)
(OP .)
(ID h)
(RELOP >)
(OP #)
(ID include)
(STRING_LITERAL "5-6.h")
(OP #)
(ID include)
(STRING_LITERAL "5-12.h")
(OP #)
(ID include)
(STRING_LITERAL "5-1.h")
(KEYWORD, void)
(ID Swap)
(OP ()
(KEYWORD, int)
(ID x)
(OP ,)
(KEYWORD, int)
(ID y)
(OP ))
(OP {)
(KEYWORD, int)
(ID temp)
(OP ;)
(ID temp)
(OP =)
(ID x)
(OP ;)
(ID x)
(OP =)
(ID y)
(OP ;)
(ID y)
(OP =)
(ID temp)
(OP ;)
(OP })
(KEYWORD, int)
(ID main)
(OP ()
(OP ))
(OP {)
(KEYWORD, double)
(ID a)
(OP =)
(NUM .3)
(OP ;)
(KEYWORD, double)
(ID b)
(OP =)
(NUM 4e)
(OP ;)
(KEYWORD, double)
(ID c)
(OP =)
(NUM 6.)
(OP ;)
(NUM 5)
(ID a5)
(OP =)
(NUM 3)
(OP ;)
(KEYWORD, double)
(ID d)
(OP =)
(NUM .3e3)
(OP ;)
(ID printf)
(OP ()
(STRING_LITERAL "%d %d")
(OP ,)
(ID a)
(OP ,)
(ID b)
(OP ))
(OP ;)
(KEYWORD, char)
(ID s)
(OP [)
(NUM 20)
(OP ])
(OP =)
(STRING_LITERAL "asdfasasdfasdf")
(OP ;)
(KEYWORD, int)
(ID a)
(OP =)
(NUM 2)
(OP ,)
(ID b)
(OP =)
(NUM 3)
(OP ;)
(ID a)
(OP ++)
(OP <<=)
(ID b)
(OP ;)
(ID a)
(OP >>=)
(ID b)
(OP --)
(OP ;)
(ID printf)
(OP ()
(STRING_LITERAL "%s")
(OP ,)
(ID s)
(OP ))
(OP ;)
(ID printf)
(OP ()
(STRING_LITERAL "璇ユ枃妗ｅ叡鍑虹幇 %d 涓湁鏁堝崟璇?")
(OP ,)
(ID wordcount)
(OP ))
(OP ;)
(ID Show)
(OP ()
(ID H)
(OP ,)
(NUM 10.0)
(OP /)
(NUM 100)
(OP ))
(OP ;)
(ID DestroyTable)
(OP ()
(ID H)
(OP ))
(OP ;)
(KEYWORD, return)
(NUM 0)
(OP ;)
(OP })

Total:
12 keywords
40 identifiers
12 constants
69 operator
7 string
0 char
